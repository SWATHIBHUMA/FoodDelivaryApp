package com.foodDelivaryApp.servlets;

import java.io.IOException;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.foodDelivaryApp.model.Cart;
import com.foodDelivaryApp.model.CartItem;
import com.foodDelivaryApp.model.Menu;


@WebServlet("/checkout")
public class OrderItemServlet extends HttpServlet {
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		String resId = request.getParameter("resId");
		String itemName = request.getParameter("itemName");
        String itemPrice = request.getParameter("itemPrice");

        // Retrieve the existing list from the session or create a new one
        HttpSession session = request.getSession();
        Cart cart = (Cart) session.getAttribute("cartItems");
        
        if (cart == null) {
            cart = new Cart();
            session.setAttribute("cart", cart);
        }

        // Redirect to the checkout page
        //response.sendRedirect(request.getContextPath() + "/checkout.jsp");
        
        // Retrieve parameters from the request
        String resId1 = request.getParameter("resId");
        String itemName1 = request.getParameter("itemName");
        String itemPrice1 = request.getParameter("itemPrice");
        String itemId = request.getParameter("itemId");
        String operation = request.getParameter("operation");

        // Find the item in the cart
        CartItem cartItem = findCartItem(cartItems, Integer.parseInt(itemId));

        // Perform operations based on the 'operation' parameter
        if (operation.equals("increment")) {
            if (cartItem != null) {
                cartItem.setQuantity(cartItem.getQuantity() + 1);
            }
        } else if (operation.equals("decrement")) {
            if (cartItem != null && cartItem.getQuantity() > 0) {
                cartItem.setQuantity(cartItem.getQuantity() - 1);
            }
        } else if (operation.equals("delete")) {
            if (cartItem != null) {
                cartItems.remove(cartItem);
            }
        } else {
        	CartItem newItem = new CartItem();
            cartItems.add(newItem);
        }

        // Update the cart in the session
        session.setAttribute("cartItems", cartItems);

        // Redirect to the checkout page
        response.sendRedirect(request.getContextPath() + "/checkout.jsp");
    }

    private CartItem findCartItem(List<CartItem> cartItems, int itemId) {
        for (Menu item : cartItems) {
            if (item.getMenuid() == itemId) {
                return item;
            }
        }
        return null;

	}	
}	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
//		String itemName = request.getParameter("itemName");
//		double itemPrice = Double.parseDouble(request.getParameter("itemPrice"));
//		
//        if (itemName != null) {
//        	System.out.println("Hii - 2");
//            itemName = itemName.trim();
//        }
//        
//        @SuppressWarnings("unchecked")
//        List<Menu> selectedItems = (List<Menu>) request.getSession().getAttribute("selectedItems");
//
//        if (selectedItems == null) {
//        	System.out.println("Hii - 3");
//            selectedItems = new ArrayList<>();
//        }
//        
//        selectedItems.add(new Menu(0, 0, itemName, null, itemPrice, false));
//        
//        System.out.println(selectedItems);
//        
//        // Set a flag to indicate that an item has been added
//        request.getSession().setAttribute("itemAddedFlag", true);
//        request.getSession().setAttribute("selectedItems", selectedItems);
//        
//        response.sendRedirect("/checkout.jsp");
//        
//		doGet(request, response);
