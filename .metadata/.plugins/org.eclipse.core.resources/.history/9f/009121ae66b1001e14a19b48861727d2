package com.foodDelivaryApp.servlets;

import com.foodDelivaryApp.daoImpl.MenuDaoImpl;
import com.foodDelivaryApp.model.Cart;
import com.foodDelivaryApp.model.CartItem;
import com.foodDelivaryApp.model.Menu;

import java.io.IOException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;


@WebServlet("/cart")
public class CartServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;

    public CartServlet() {
        super();
    }

    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.getWriter().append("Served at: ").append(request.getContextPath());
    }

    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        
        HttpSession session = request.getSession();
        Cart cart = (Cart) session.getAttribute("cart");
        
        if (cart == null) {
            cart = new Cart();
            session.setAttribute("cart", cart);
        }

        String operation = request.getParameter("action");

        // Perform operations based on the 'operation' parameter
        if (operation.equals("increment")) {
            updateCartItems(request,cart,1);
        }
        else if(operation.equals("decrement")) {
        	updateCartItems(request,cart,-1);
        	
        }
        else if (operation.equals("delete")) {
            deleteCartItems(request,cart);
        }
        else if (operation.equals("add")) {
        	System.out.println("addItemToCart");
            addItemToCart(request,cart);
        }

        session.setAttribute("cart", cart);
        System.out.println("session");
        response.sendRedirect("checkout.jsp");
    }
    
    
    

    private void updateCartItems(HttpServletRequest request, Cart cart, int quantityChange)
            throws ServletException, IOException {
        int itemId = Integer.parseInt(request.getParameter("itemId"));
        int originalQuantity = Integer.parseInt(request.getParameter("originalQty_" + itemId));
        int newQuantity = originalQuantity + quantityChange;

        // Ensure the quantity is not less than 1
        newQuantity = Math.max(newQuantity, 1);

        // Update the cart item and set the display quantity attribute in the session
        cart.updateItem(itemId, newQuantity);
        HttpSession session = request.getSession();
        session.setAttribute("displayQty_" + itemId, newQuantity);
    }

	
	
	

	private void deleteCartItems(HttpServletRequest request, Cart cart) {
		int itemId = Integer.parseInt(request.getParameter("itemId"));
		cart.removeItem(itemId);
		
	}

	private void addItemToCart(HttpServletRequest request, Cart cart) {
		int itemId = Integer.parseInt(request.getParameter("itemId"));
		int quantity=1;
		
		MenuDaoImpl menuDao = new MenuDaoImpl();
		Menu menuItem = menuDao.getMenu(itemId);
		
		HttpSession session = request.getSession();
		session.setAttribute("restaurenttId", menuItem.getRestaurentid());
		
		if (menuItem != null) {
	        // Check if the item is already in the cart
	        CartItem existingItem = cart.getCartItem(itemId);
	        if (existingItem != null) {
	            // Item already in cart, increment the quantity
	            existingItem.setQuantity(existingItem.getQuantity() + quantity);
	            
	        } else {
	            // Item not in cart, add as a new item
	            CartItem newItem = new CartItem(menuItem.getMenuid(), menuItem.getRestaurentid(), menuItem.getItemname(), quantity, menuItem.getPrice());
	            cart.addItem(newItem);
	        }
	    }
	}
}

