/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.83
 * Generated at: 2024-01-17 12:55:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.foodDelivaryApp.servlets.MenuServlet;
import com.foodDelivaryApp.model.Menu;
import com.foodDelivaryApp.daoImpl.MenuDaoImpl;
import com.foodDelivaryApp.dao.MenuDao;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

public final class Menus_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Objects");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.foodDelivaryApp.daoImpl.MenuDaoImpl");
    _jspx_imports_classes.add("com.foodDelivaryApp.model.Menu");
    _jspx_imports_classes.add("com.foodDelivaryApp.servlets.MenuServlet");
    _jspx_imports_classes.add("com.foodDelivaryApp.dao.MenuDao");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Menu</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"CSS/menu.css\" type=\"text/css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<header> \r\n");
      out.write("    		<div id=\"logo\">Food<span id=\"logo-s\">BEE</span></div>\r\n");
      out.write("            ");
 String username = (String) session.getAttribute("username"); 
      out.write("\r\n");
      out.write("            ");
 if (!(username==null) && !username.isEmpty()) { 
      out.write("\r\n");
      out.write("               <div id=\"logo-1\">Welcome  \r\n");
      out.write("               <a href=\"");
      out.print( request.getContextPath() );
      out.write("/UserServlet?action=logout\"><span id=\"logo-s-1\">");
      out.print( username );
      out.write("</span></a></div>\r\n");
      out.write("            ");
 } else { 
      out.write("\r\n");
      out.write("                <span class=\"sign\"><a class=\"act\" href=\"signUp.jsp\">SIGN UP</a></span>\r\n");
      out.write("                <span class=\"sign\"><a class=\"act\" href=\"login.jsp\">LOG IN</a></span>\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("            <span class=\"sign\"><a class=\"act\" href=\"checkout.jsp\">View Cart</a></span>\r\n");
      out.write("	</header>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"menu-heading\"><h1>Here goes menu ...</h1></div>\r\n");
      out.write("	\r\n");
      out.write("	<div id=\"notification\"></div>\r\n");
      out.write("\r\n");
      out.write("		<div class=\"list\">\r\n");
      out.write("\r\n");
      out.write("		");

		try {
			@SuppressWarnings("unchecked")
			List<Menu> menuDao = (List<Menu>) request.getAttribute("menuItems");
			//out.println("Menu Items Size in jsp: " + (menuDao != null ? menuDao.size() : "null"));
			if (menuDao != null) {
		
      out.write("\r\n");
      out.write("		\r\n");
      out.write("				");

				for (Menu menuItem : menuDao) {
				
      out.write("\r\n");
      out.write("					<div class=\"menu-card\">\r\n");
      out.write("						<div class=\"menu-items\">\r\n");
      out.write("							<p id=\"item-name\">\r\n");
      out.write("								<strong>");
      out.print(menuItem.getItemname());
      out.write("</strong>\r\n");
      out.write("							</p>\r\n");
      out.write("							<p id=\"item-price\">â‚¹");
      out.print(menuItem.getPrice());
      out.write("</p>\r\n");
      out.write("							<br>\r\n");
      out.write("							<p id=\"item-Description\">");
      out.print(menuItem.getDescription());
      out.write("</p>\r\n");
      out.write("							<br>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"menu-image\">\r\n");
      out.write("							<img src=\"");
      out.print(menuItem.getImagePath());
      out.write("\" alt=\"Dosa Image\" style=\"height: 125px; width:155px;\"/>\r\n");
      out.write("							<input type=\"hidden\" name=\"itemName\" value=\"");
      out.print(menuItem.getItemname());
      out.write("\">\r\n");
      out.write("    						<input type=\"hidden\" name=\"itemPrice\" value=\"");
      out.print(menuItem.getPrice());
      out.write("\">\r\n");
      out.write("    						<form class = \"btn-form\" action=\"cart\" method=\"POST\">\r\n");
      out.write("    							<input type=\"hidden\" name=\"resId\" value=\"");
      out.print(menuItem.getRestaurentid());
      out.write("\">\r\n");
      out.write("    							<input type=\"hidden\" name=\"itemName\" value=\"");
      out.print(menuItem.getItemname());
      out.write("\">\r\n");
      out.write("    							<input type=\"hidden\" name=\"itemPrice\" value=\"");
      out.print(menuItem.getPrice());
      out.write("\">\r\n");
      out.write("    							<input type=\"hidden\" name=\"itemId\" value=\"");
      out.print( menuItem.getMenuid() );
      out.write("\">\r\n");
      out.write("    							<input type=\"hidden\" name=\"qty\" value=\"1\">\r\n");
      out.write("    							<input type=\"hidden\" name=\"action\" value=\"add\">\r\n");
      out.write("								<button class=\"image-button\">Add to Cart</button>\r\n");
      out.write("    						</form>\r\n");
      out.write("    						\r\n");
      out.write("						</div> \r\n");
      out.write("					</div>\r\n");
      out.write("				");

				}
				
      out.write(" \r\n");
      out.write("		</div>\r\n");
      out.write("				");

				} else {
					
					out.println("Menu is not available.");
				}
			} catch (Exception e) {
				System.out.println("Hii");
				e.printStackTrace();
			}
			
      out.write("\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("		<!-- ... Your existing code ... -->\r\n");
      out.write("	<script>\r\n");
      out.write("	\r\n");
      out.write("		function addToCart(itemName, itemPrice) {\r\n");
      out.write("		    var cartItem = {\r\n");
      out.write("		        itemName: itemName,\r\n");
      out.write("		        itemPrice: itemPrice\r\n");
      out.write("		    };\r\n");
      out.write("		\r\n");
      out.write("		    var existingCart = JSON.parse(sessionStorage.getItem('cart')) || [];\r\n");
      out.write("		\r\n");
      out.write("		    existingCart.push(cartItem);\r\n");
      out.write("		\r\n");
      out.write("		    sessionStorage.setItem('cartItems', JSON.stringify(existingCart));\r\n");
      out.write("		    \r\n");
      out.write("		    var form = document.createElement('form');\r\n");
      out.write("		    form.action = '");
      out.print( request.getContextPath() );
      out.write("/checkout';\r\n");
      out.write("		    form.method = 'post';\r\n");
      out.write("\r\n");
      out.write("		   \r\n");
      out.write("		    var itemNameInput = document.createElement('input');\r\n");
      out.write("		    itemNameInput.type = 'hidden';\r\n");
      out.write("		    itemNameInput.name = 'itemName';\r\n");
      out.write("		    itemNameInput.value = itemName;\r\n");
      out.write("\r\n");
      out.write("		    var itemPriceInput = document.createElement('input');\r\n");
      out.write("		    itemPriceInput.type = 'hidden';\r\n");
      out.write("		    itemPriceInput.name = 'itemPrice';\r\n");
      out.write("		    itemPriceInput.value = itemPrice;\r\n");
      out.write("\r\n");
      out.write("		    form.appendChild(itemNameInput);\r\n");
      out.write("		    form.appendChild(itemPriceInput);\r\n");
      out.write("\r\n");
      out.write("		    document.body.appendChild(form);\r\n");
      out.write("\r\n");
      out.write("		    form.submit();\r\n");
      out.write("\r\n");
      out.write("		    document.body.removeChild(form);\r\n");
      out.write("\r\n");
      out.write("		    return false;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("	<script src=\"jsfile.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
